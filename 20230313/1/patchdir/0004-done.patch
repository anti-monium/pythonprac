From d93e98ff7235ec795ce4967309db442851af78da Mon Sep 17 00:00:00 2001
From: Maria <mrzzz13169@gmail.com>
Date: Sun, 2 Apr 2023 12:33:33 +0300
Subject: [PATCH 4/4] done

---
 20230313/1/client.py | 21 +++++++++++++++------
 20230313/1/prog.py   | 13 ++++++++-----
 2 files changed, 23 insertions(+), 11 deletions(-)

diff --git a/20230313/1/client.py b/20230313/1/client.py
index 8db6c8f..46e258b 100644
--- a/20230313/1/client.py
+++ b/20230313/1/client.py
@@ -1,6 +1,7 @@
 import cowsay
 import shlex
 import cmd
+import socket
 
 weapons = {'sword': 10, 'spear': 15, 'axe': 20}
 custom_cows = ['jgsbat']
@@ -18,10 +19,10 @@ def print_monster(name, hello):
 
 def request(s):
     global dangeon_socket
-    dangeon_socket.sendall(s.encode())
-    ans = ''
-    dangeon_socket.recv_into(ans)
-    ans = ans.decode().split('\n')
+    dangeon_socket.send((s + '\n').encode())
+    ans = bytearray()
+    ans = dangeon_socket.recv(4096)
+    ans = ans.decode().rstrip().split('\n')
     for line in ans:
         if line.startswith('MONSTER'):
             line = shlex.split(line)
@@ -30,7 +31,7 @@ def request(s):
             print(line)
 
 
-class CLi_Dangeon(cmd.Cmd):
+class Cli_Dangeon(cmd.Cmd):
     intro = '<<< Welcome to Python-MUD 0.1 >>>'
     prompt = '>>>> '
     
@@ -105,7 +106,9 @@ class CLi_Dangeon(cmd.Cmd):
             
     def complete_attack(self, prefix, line, start, end):
         line = shlex.split(line)
-        if len(line) >= 2 and 'with'.startswith(prefix):
+        if line[-1] == 'with':
+            return ['sword', 'spear', 'axe']
+        elif len(line) >= 2 and 'with'.startswith(prefix):
             return ['with']
         elif len(line) >= 3 and line[-2] == 'with':
             return [weapon for weapon in ['sword', 'spear', 'axe']
@@ -115,6 +118,12 @@ class CLi_Dangeon(cmd.Cmd):
                     if name.startswith(prefix)]
                     
                     
+    def do_exit(self, arg):
+        global dangeon_socket
+        dangeon_socket.close()
+        return True
+                    
+                    
 with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as dangeon_socket:
     dangeon_socket.connect(("localhost", 1337))
     Cli_Dangeon(completekey='tab').cmdloop()
diff --git a/20230313/1/prog.py b/20230313/1/prog.py
index dff7c87..b962b23 100644
--- a/20230313/1/prog.py
+++ b/20230313/1/prog.py
@@ -1,6 +1,7 @@
 import cowsay
 import shlex
 import cmd
+import asyncio
 
 n = 10
 field = [[0 for i in range(n)] for j in range(n)]
@@ -41,23 +42,24 @@ def addmon(name, hello, x, y, hp):
     if field[y][x]:
         ans = ans + '\n' + 'Replaced the old monster'
     field[y][x] = Monster(name, x, y, hello, hp)
+    return ans
     
     
 def attack(name, damage):
     if not field[g.y][g.x]:
         return 'No monster here'
     monster = field[g.y][g.x]
-    if name != monster.name
+    if name != monster.name:
         return f'No {name} here'
     if monster.hp < damage:
         damage = monster.hp
     monster.hp -= damage
     ans = f'Attacked {monster.name}, damage {damage} hp'
     if monster.hp == 0:
-        ans = '\n' + f'{monster.name} died'
+        ans = ans + '\n' + f'{monster.name} died'
         field[g.y][g.x] = 0
     else:
-        ans = '\n' + f'{monster.name} now has {monster.hp}'
+        ans = ans + '\n' + f'{monster.name} now has {monster.hp}'
     return ans
     
 
@@ -65,7 +67,8 @@ async def Dangeon(reader, writer):
     host, port = writer.get_extra_info('peername')
     while not reader.at_eof():
         request = await reader.readline()
-        request = request.decode()
+        request = request.decode().rstrip()
+        ans = ''
         match shlex.split(request):
             case ["move", x, y]:
                 ans = move(int(x), int(y))
@@ -73,7 +76,7 @@ async def Dangeon(reader, writer):
                 ans = addmon(name, hello, int(x), int(y), int(hp))
             case ["attack", name, damage]:
                 ans = attack(name, int(damage))
-        writer.write(ans.encode())
+        writer.write((ans + '\n').encode())
     writer.close()
     await writer.wait_closed()
 
-- 
2.34.1

